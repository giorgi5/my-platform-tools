apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configName }}
  namespace: {{ .Values.namespace}}
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
               "access":"proxy",
                "editable": true,
                "name": "prometheus",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://prometheus-service.monitoring.svc:8080",
                "version": 1
            }
        ]
    }
---
#Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployName }}
  namespace: {{ .Values.namespace}}
spec:
  replicas: {{ .Values.replicaSet }}
  selector:
    matchLabels:
      app: {{ .Values.app }}
  template:
    metadata:
      name: {{ .Values.app }}
      labels:
        app: {{ .Values.app }}
    spec:
      containers:
      - name: {{ .Values.containerName }}
        image: {{ .Values.containerImage }}
        ports:
        - name: {{ .Values.portName }}
          containerPort: {{ .Values.containerPort }}
        resources:
          limits:
            memory: {{ .Values.limitsMemory }}
            cpu: {{ .Values.limitsCpu }}
          requests: 
            memory: {{ .Values.requestsMemory }}
            cpu: {{ .Values.requestsCpu }}
        volumeMounts:
        {{- range .Values.volumeMounts }}
          - mountPath: {{ .mountPath }}
            name: {{ .name }}
            {{- if .readOnly }}
            readOnly: {{ .readOnly }}
            {{- end }}
        {{- end }}
      volumes:
      {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- if .emptyDir }}
          emptyDir: {}
          {{- else if .configMap }}
          configMap:
            defaultMode: {{ .configMap.defaultMode }}
            name: {{ .configMap.name }}
          {{- end }}
      {{- end }}
---
#Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.svcName }}
  namespace: {{ .Values.namespace}}
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '3000'
spec:
  selector: 
    app: {{ .Values.app }}
  type: {{ .Values.type }}  
  ports:
    - port: {{ .Values.port }}
      targetPort: {{ .Values.targetPort }}
      nodePort: {{ .Values.nodePort }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingressName }}
  namespace: {{ .Values.namespace}}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: {{ .Values.ingressClassName }}
  rules:
  - host: {{ .Values.host }}
    http:
      paths:
      - path: /
        pathType: {{ .Values.pathType }}
        backend:
          service:
            name: {{ .Values.svcName }}
            port:
              number: {{ .Values.port }}